{"name":"Reading view","tagline":"View web pages in a reading mode. ","body":"## Desciption\r\n\r\nio.js module for generating customisable easy to read html on the go.\r\n\r\nThis project can be found on NPM and installed through that.\r\n\r\n**Important:** Project is in development stage, so big changes could be made!\r\n\r\n**Example:** [readerview.mopso.co](http://readerview.mopso.co/demo/)\r\n\r\n## Installation\r\n\r\n`npm install reading_view`\r\n\r\n## Current Version\r\n\r\n`0.2.1`\r\n\r\n## Using\r\n\r\n#### Getting Started\r\n```\r\nvar readingView = require('reading_view');\r\n\r\nreadingView.convert(url, params, callback);\r\n```\r\n\r\n#### Parametrs\r\n###### Convert Function\r\n|Paramert|Description| Type | \r\n|:-------|:-------|:-------|\r\n|url     |URL of web page to convert into reading view| Url | \r\n|params  |Customisation Parametrs for convertation    | Object Params |\r\n|callback|Function that is called when convertation is done, passes err - for errors, res - html string converted for reading| Function|\r\n\r\n###### Params Object  in Convert Function\r\n|Paramert|Description| Type | Default |\r\n|:-------|:-------|:-------|:-------|\r\n| articleQuery | JQuery stiled query to find current article body |String  | article |\r\n| tagsToInclude | Each element is a JQuery stiled query to fetch elements inside main article | Array  | ['p','img'] |\r\n| title | Parametrs to define title configuration | Object Title | \r\n\r\n###### Title Object \r\n|Paramert|Description| Type | Default |\r\n|:-------|:-------|:-------|:-------|\r\n|textOnly| Fetch only text from title without current tags |Boolean  | false|\r\n|tagToWrap| Html tag name, that is wrapping title if *textOnly* is *true* |String|'h2'|\r\n|query| JQuery styled query to fetch header in article, if there are more than one, fetches first | String | \"${self.articleSelector} h${i}:first\" _where i is Int from 1 to 6_ |\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}